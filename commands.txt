Cria um scaffold para tabela Coin
rails generate scaffold Coin description:string acronym:string url_image:string 

Cria o banco de dados
rails db:create

Execulta o scaffold que cria uma tabela no banco
rails db:migrate

Inicia o servidor como produção
RAILS_ENV=production rails s

Para abrir o terminal
rails c 

Parar criar um novo registro pelo terminal do Rails
c = Coin.new
c.description = "Dash"
c.acronym = "DASH"
c.url_image = "https://s2.coinmarketcap.com/static/img/coins/200x200/131.png"
c.save

[1] pry(main)> h = {nome: "Jackson", curso:"Rails"}
=> {:nome=>"Jackson", :curso=>"Rails"}
[2] pry(main)> h[:nome]
=> "Jackson"
[3] pry(main)> h[:curso]
=> "Rails"

Para criar uma chave estrangeira entre na tabela Coin da tabela MiningType, o ruby sabe qual tabela ele deve pegar o id, pois ele busca uma tabela com o mesmo nome do campo no plural
rails g migration AddMiningTypeToCoins mining_type:references

[8] pry(main)> c.map(&:description)
=> ["Bitcoin", "Ethereum", "Dash"]

[9] pry(main)> c.map { |coin| coin.description }
=> ["Bitcoin", "Ethereum", "Dash"]

[10] pry(main)> c.map(&:description)
=> ["Bitcoin", "Ethereum", "Dash"]

[11] pry(main)> c.map { |coin| [coin.description, coin.acronym] }
=> [["Bitcoin", "BTC"], ["Ethereum", "ETC"], ["Dash", "DASH"]]

[12] pry(main)> c.map([&:description, &:acronym)]
SyntaxError: unexpected &, expecting ']'
c.map([&:description, &:acronym)]
        ^

Comando semelhante ao map

[12] pry(main)> c.pluck(:description)
=> ["Bitcoin", "Ethereum", "Dash"]

[14] pry(main)> c.pluck(:description, :acronym)
=> [["Bitcoin", "BTC"], ["Ethereum", "ETC"], ["Dash", "DASH"]]